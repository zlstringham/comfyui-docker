name: Docker

on:
  schedule:
    - cron: '15 8 * * *'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: zlstringham/comfyui

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.comfyui_hash.outputs.hash }}
      outcome: ${{ steps.image_exists.outcome }}
    steps:
      - name: ComfyUI Hash
        id: comfyui_hash
        run: |
          echo "hash=$(git ls-remote https://github.com/comfyanonymous/ComfyUI.git | head -c7)" >> "$GITHUB_OUTPUT"
      - name: Check if image exists
        id: image_exists
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: cloudposse/github-action-docker-image-exists@main
        continue-on-error: true
        with:
          registry: registry.hub.docker.com
          image_name: "${{ env.IMAGE_NAME }}"
          tag: sha-${{ steps.comfyui_hash.outputs.hash }}
          login: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ github.event_name == 'workflow_dispatch' || needs.check.outputs.outcome == 'failure' }}
    steps:
      - name: Free up disk space
        uses: jlumbroso/free-disk-space@main
      - name: Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,pattern=nightly-{{date 'YYYYMMDD'}}
            type=raw,value=sha-${{ needs.check.outputs.hash }}
            type=raw,value=latest
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64
          build-args: |
            GIT_CLONE_CACHE=${{ needs.check.outputs.hash }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
